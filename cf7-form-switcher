<?php
/*
Plugin Name: CF7 Forms Switcher
Description: Automatically switches from a registration form to a waitlist form after reaching a submission limit. Requires Contact Form 7 and CFDB7.
Version: 1.3
Author: Jackets Development
Requires Plugins: contact-form-7
*/

include_once(ABSPATH . 'wp-admin/includes/plugin.php');

// === Admin notice if Contact Form 7 is not active ===
add_action('admin_init', function() {
    if (!is_plugin_active('contact-form-7/wp-contact-form-7.php')) {
        add_action('admin_notices', function () {
            echo '<div class="notice notice-error"><p><strong>CF7 Forms Switcher:</strong> This plugin requires <a href="https://wordpress.org/plugins/contact-form-7/" target="_blank">Contact Form 7</a> to be installed and activated.</p></div>';
        });
    }
});

// === Register settings ===
add_action('admin_init', function() {
    register_setting('cf7fs_settings', 'cf7fs_registration_form_id');
    register_setting('cf7fs_settings', 'cf7fs_waitlist_form_id');
    register_setting('cf7fs_settings', 'cf7fs_max_submissions');
    register_setting('cf7fs_settings', 'cf7fs_alert_emails');
});

// === Admin settings menu ===
add_action('admin_menu', function() {
    add_options_page('CF7 Forms Switcher', 'CF7 Forms Switcher', 'manage_options', 'cf7-forms-switcher', 'cf7fs_settings_page');
});

// === Get list of CF7 forms ===
function cf7fs_get_forms_list() {
    $forms = get_posts([
        'post_type' => 'wpcf7_contact_form',
        'numberposts' => -1
    ]);
    $list = [];
    foreach ($forms as $form) {
        $list[$form->ID] = $form->post_title;
    }
    return $list;
}

// === Settings page UI ===
function cf7fs_settings_page() {
    $forms = cf7fs_get_forms_list();
    ?>
    <div class="wrap">
        <h1>CF7 Forms Switcher Settings</h1>
        <form method="post" action="options.php">
            <?php settings_fields('cf7fs_settings'); ?>
            <table class="form-table">
                <tr>
                    <th>Form A</th>
                    <td>
                        <select name="cf7fs_registration_form_id">
                            <?php foreach ($forms as $id => $title): ?>
                                <option value="<?php echo esc_attr($id); ?>" <?php selected(get_option('cf7fs_registration_form_id'), $id); ?>>
                                    <?php echo esc_html($title); ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>Form B</th>
                    <td>
                        <select name="cf7fs_waitlist_form_id">
                            <?php foreach ($forms as $id => $title): ?>
                                <option value="<?php echo esc_attr($id); ?>" <?php selected(get_option('cf7fs_waitlist_form_id'), $id); ?>>
                                    <?php echo esc_html($title); ?>
                                </option>
                            <?php endforeach; ?>
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>Max Guest Submissions</th>
                    <td><input type="number" name="cf7fs_max_submissions" value="<?php echo esc_attr(get_option('cf7fs_max_submissions', 200)); ?>" /></td>
                </tr>
                <tr>
                    <th>Alert Emails (comma-separated)</th>
                    <td><input type="text" name="cf7fs_alert_emails" value="<?php echo esc_attr(get_option('cf7fs_alert_emails')); ?>" /></td>
                </tr>
            </table>
            <?php submit_button(); ?>
        </form>

        <form method="post">
            <?php submit_button('Reset Registration Submissions', 'delete', 'cf7fs_reset_submissions'); ?>
        </form>
    </div>
    <?php
}

// === Handle reset button ===
add_action('admin_init', function() {
    if (isset($_POST['cf7fs_reset_submissions'])) {
        global $wpdb;
        $form_id = get_option('cf7fs_registration_form_id');
        $table = $wpdb->prefix . 'db7_forms';
        $wpdb->query($wpdb->prepare("DELETE FROM $table WHERE form_post_id = %d", $form_id));
        add_action('admin_notices', function () {
            echo '<div class="notice notice-success"><p>CFDB7 entries for the registration form have been reset.</p></div>';
        });
    }
});

// === CFDB7 submission count ===
function cf7fs_get_submission_count($form_id) {
    global $wpdb;
    $table = $wpdb->prefix . 'db7_forms';

    // Get all submissions for this form ID
    $rows = $wpdb->get_results($wpdb->prepare(
        "SELECT form_value FROM $table WHERE form_post_id = %d",
        $form_id
    ));

    $guest_count = 0;

    foreach ($rows as $row) {
        $data = @unserialize($row->form_value);
        if (is_array($data) && isset($data['registration_type'])) {
            $type = $data['registration_type'];

            // Handle if it's stored as array or string
            if (is_array($type)) {
                if (in_array('Guest', $type)) {
                    $guest_count++;
                }
            } elseif ($type === 'Guest') {
                $guest_count++;
            }
        }
    }

    return $guest_count;
}


// === Conditional shortcode ===
add_shortcode('conditional_form', function() {
    $reg_id = get_option('cf7fs_registration_form_id');
    $wait_id = get_option('cf7fs_waitlist_form_id');
    $max = intval(get_option('cf7fs_max_submissions', 200));
    $emails = get_option('cf7fs_alert_emails');

    $count = cf7fs_get_submission_count($reg_id);

    if ($count >= $max) {
        // Send alert email once
        $already_sent = get_option('cf7fs_alert_sent', false);
        if (!$already_sent && $emails) {
            $to = array_map('trim', explode(',', $emails));
            wp_mail($to, 'CF7 Submission Limit Reached', "The maximum number of submissions ($max) has been reached for the registration form.");
            update_option('cf7fs_alert_sent', true);
        }
        return do_shortcode('[contact-form-7 id="' . esc_attr($wait_id) . '"]');
    } else {
        update_option('cf7fs_alert_sent', false); // reset flag if under limit
        return do_shortcode('[contact-form-7 id="' . esc_attr($reg_id) . '"]');
    }
});
