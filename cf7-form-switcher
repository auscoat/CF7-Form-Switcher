?php
/*
Plugin Name: CF7 Waitlist Switcher (CFDB7 Based)
Description: Automatically switches a Contact Form 7 registration form to a waitlist form after a maximum number of submissions (tracked via CFDB7). Includes admin panel, reset button, and email alerts with CC support.
Version: 1.1
Author: Jackets Development
*/

defined('ABSPATH') || exit;

// === GET SETTINGS ===
function cf7ws_get_option($key, $default = '') {
    return get_option('cf7ws_' . $key, $default);
}

// === COUNT SUBMISSIONS FROM CFDB7 ===
function get_cf7_submission_count_cfdb7($form_id) {
    global $wpdb;
    return (int) $wpdb->get_var($wpdb->prepare(
        "SELECT COUNT(*) FROM {$wpdb->prefix}db7_forms WHERE form_post_id = %d",
        $form_id
    ));
}

// === SHORTCODE TO DISPLAY CORRECT FORM ===
add_shortcode('conditional_form', function() {
    $reg_id = (int) cf7ws_get_option('reg_form_id', 0);
    $wait_id = (int) cf7ws_get_option('wait_form_id', 0);
    $limit = (int) cf7ws_get_option('max_subs', 200);

    $count = get_cf7_submission_count_cfdb7($reg_id);
    $form_id = ($count >= $limit) ? $wait_id : $reg_id;

    return do_shortcode('[contact-form-7 id="' . esc_attr($form_id) . '"]');
});

// === BLOCK SUBMISSIONS IF LIMIT IS HIT ===
add_action('wpcf7_before_send_mail', function($contact_form) {
    $reg_id = (int) cf7ws_get_option('reg_form_id', 0);
    $wait_id = (int) cf7ws_get_option('wait_form_id', 0);
    $limit = (int) cf7ws_get_option('max_subs', 200);
    $emails = cf7ws_get_option('alert_emails', get_bloginfo('admin_email'));
    $email_list = array_map('trim', explode(',', $emails));

    if ((int)$contact_form->id() === $reg_id) {
        $count = get_cf7_submission_count_cfdb7($reg_id);

        if ($count >= $limit) {
            $submission = WPCF7_Submission::get_instance();
            if ($submission) {
                $submission->invalidate(null, "Registration is full. Please use the waitlist form.");
            }
        } elseif ($count + 1 === $limit) {
            $to = $email_list;
            $subject = "CF7 Registration Limit Reached";
            $message = "The registration form has now reached the limit of $limit submissions.";
            $headers = ['Content-Type: text/html; charset=UTF-8'];
            if (count($to) > 1) {
                $headers[] = 'Cc: ' . implode(',', array_slice($to, 1));
            }
            wp_mail($to[0], $subject, $message, $headers);
        }
    }
});

// === ADMIN MENU PAGE ===
add_action('admin_menu', function() {
    add_options_page('CF7 Waitlist Switcher', 'CF7 Waitlist Switcher', 'manage_options', 'cf7-waitlist-switcher', 'cf7_waitlist_switcher_settings_page');
});

// === ADMIN SETTINGS PAGE ===
function cf7_waitlist_switcher_settings_page() {
    if ($_SERVER['REQUEST_METHOD'] === 'POST' && check_admin_referer('cf7ws_update_settings')) {
        update_option('cf7ws_reg_form_id', sanitize_text_field($_POST['reg_form_id']));
        update_option('cf7ws_wait_form_id', sanitize_text_field($_POST['wait_form_id']));
        update_option('cf7ws_max_subs', sanitize_text_field($_POST['max_subs']));
        update_option('cf7ws_alert_emails', sanitize_text_field($_POST['alert_emails']));
        echo '<div class="updated"><p>Settings saved.</p></div>';
    }

    $reg_id = esc_attr(cf7ws_get_option('reg_form_id', ''));
    $wait_id = esc_attr(cf7ws_get_option('wait_form_id', ''));
    $max = esc_attr(cf7ws_get_option('max_subs', 200));
    $emails = esc_attr(cf7ws_get_option('alert_emails', get_bloginfo('admin_email')));
    $count = get_cf7_submission_count_cfdb7((int)$reg_id);
    ?>

    <div class="wrap">
        <h1>CF7 Waitlist Switcher</h1>
        <form method="post">
            <?php wp_nonce_field('cf7ws_update_settings'); ?>
            <table class="form-table">
                <tr>
                    <th scope="row"><label for="reg_form_id">Registration Form ID</label></th>
                    <td><input name="reg_form_id" type="number" value="<?php echo $reg_id; ?>" class="regular-text" /></td>
                </tr>
                <tr>
                    <th scope="row"><label for="wait_form_id">Waitlist Form ID</label></th>
                    <td><input name="wait_form_id" type="number" value="<?php echo $wait_id; ?>" class="regular-text" /></td>
                </tr>
                <tr>
                    <th scope="row"><label for="max_subs">Max Submissions</label></th>
                    <td><input name="max_subs" type="number" value="<?php echo $max; ?>" class="regular-text" /></td>
                </tr>
                <tr>
                    <th scope="row"><label for="alert_emails">Alert Emails (comma separated)</label></th>
                    <td><input name="alert_emails" type="text" value="<?php echo $emails; ?>" class="regular-text" /></td>
                </tr>
            </table>
            <?php submit_button(); ?>
        </form>

        <h2>Submission Count</h2>
        <p><strong>Current:</strong> <?php echo $count; ?> / <?php echo $max; ?></p>

        <form method="get">
            <input type="hidden" name="page" value="cf7-waitlist-switcher">
            <input type="hidden" name="reset" value="1">
            <input type="submit" class="button button-secondary" value="Reset Submission Count (Delete Entries)">
        </form>

        <?php if (isset($_GET['reset']) && $_GET['reset'] === '1') {
            global $wpdb;
            $wpdb->query($wpdb->prepare(
                "DELETE FROM {$wpdb->prefix}db7_forms WHERE form_post_id = %d",
                $reg_id
            ));
            echo '<div class="updated"><p>Submission count has been reset (entries deleted from CFDB7).</p></div>';
        } ?>
    </div>
    <?php
}
